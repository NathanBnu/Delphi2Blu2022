unit TestuCalculadora;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, uCalculadora;

type
  // Test methods for class TCalculadora

  TestTCalculadora = class(TTestCase)
  strict private
    FCalculadora: TCalculadora;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure Testsomar;
    procedure Testsubtrair;
    procedure Testmultiplicar;
    procedure Testdividir;
  end;

implementation

procedure TestTCalculadora.SetUp;
begin
  FCalculadora := TCalculadora.Create;
end;

procedure TestTCalculadora.TearDown;
begin
  FCalculadora.Free;
  FCalculadora := nil;
end;

procedure TestTCalculadora.Testsomar;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 1;
  aNum2 := 1;
  // TODO: Setup method call parameters
  ReturnValue := FCalculadora.somar(aNum1, aNum2);
  // TODO: Validate method results
  CheckEquals(2, ReturnValue, 'Erro no método somar');
end;

procedure TestTCalculadora.Testsubtrair;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 1;
  aNum2 := 1;
  // TODO: Setup method call parameters
  ReturnValue := FCalculadora.subtrair(aNum1, aNum2);
  // TODO: Validate method results
  CheckEquals(0, ReturnValue, 'Erro no método subtrair');
end;

procedure TestTCalculadora.Testmultiplicar;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 2;
  aNum2 := 2;
  // TODO: Setup method call parameters
  ReturnValue := FCalculadora.multiplicar(aNum1, aNum2);
  // TODO: Validate method results
  CheckEquals(4, ReturnValue, 'Erro no método multiplicar');
end;

procedure TestTCalculadora.Testdividir;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 2;
  aNum2 := 2;
  // TODO: Setup method call parameters
  ReturnValue := FCalculadora.dividir(aNum1, aNum2);
  // TODO: Validate method results
  CheckEquals(1, ReturnValue, 'Erro no método dividir');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTCalculadora.Suite);
end.

